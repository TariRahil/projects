package dl;

import java.util.ArrayList;
import java.util.List;
import org.hibernate.Session;
import org.hibernate.query.Query;

import bl.common.CreateSession;
import bo.Resource;
import bo.views.ResourceView;

public class ResourceDL {



    public List<Resource> selectAll1(){
        Session session = CreateSession.OpenSession();

        String hQl = "from Resource ";
        Query query = session.createQuery(hQl);
        List<Resource> resource =  query.list();

        CreateSession.CloseSession();

        return resource;
    }
    public List<ResourceView> selectAll(int currentPage, int recordPerPage){
        currentPage-=1;//show first record from 1 not zero

        Session session = CreateSession.OpenSession();

        //( (Integer) session.createQuery("select count(*) from Resource ").iterate().next() ).intValue();
        String hQl = "select Count(*) from Resource ";
        Query query1 = session.createQuery(hQl);
        long count = (long)query1.uniqueResult();
        //int count = ( (Integer) session.createQuery("select count(*) from Resource ").iterate().next() ).intValue();
        int pageCount= (count%recordPerPage)>0? ((int)(count/recordPerPage)+1) :(int) (count/recordPerPage);

        String hql2 = " from Resource ";
        Query query2 = session.createQuery(hql2).setFirstResult(currentPage*recordPerPage).setMaxResults(recordPerPage);

        List<Resource> resourceList = query2.list();
        List<ResourceView> resourceviewList = new ArrayList<ResourceView>();
        for (Resource resource:resourceList) {
            ResourceView resourceView= new ResourceView();
            resourceView.setName(resource.getName());
            resourceView.setLocation(resource.getLocation());
            resourceView.setActive(resource.getActive());
            resourceView.setFloor(resource.getFloor());
            resourceView.setOwner(resource.getOwner());
            resourceView.setResourceId(resource.getResourceId());
            resourceView.setUnitId(resource.getUnitId());
            resourceView.setPageCount(pageCount);
            resourceView.setCount((int) count);
            resourceviewList.add(resourceView);
        }

        CreateSession.CloseSession();

        return resourceviewList;
    }

    public Resource selectByResourceId(String resourceId)
    {
        Session session = CreateSession.OpenSession();

        String hQl="from Resource where resourceId=: id ";
        Query query = session.createQuery(hQl);
        query.setParameter("id" , Integer.parseInt(resourceId));
        Resource resource = (Resource) query.uniqueResult();

        CreateSession.CloseSession();

        return resource;
    }
}
